/**
 * Utility functions for Chrome extension operations
 * Essential utilities for basic extension functionality
 * @module {{PROJECT_NAME}}
 * @file src/shared/utils.js
 * @generated create-uikit v2.0.0
 */

// Chrome storage utilities
export const storage = {
  /**
   * Get data from Chrome storage
   * @param {string|array} keys - Storage keys to retrieve
   * @returns {Promise<object>} Storage data
   */
  async get(keys) {
    try {
      return await chrome.storage.sync.get(keys);
    } catch (error) {
      console.error('Storage get failed:', error);
      return {};
    }
  },

  /**
   * Set data to Chrome storage
   * @param {object} data - Data to store
   * @returns {Promise<boolean>} Success status
   */
  async set(data) {
    try {
      await chrome.storage.sync.set(data);
      return true;
    } catch (error) {
      console.error('Storage set failed:', error);
      return false;
    }
  },
};

// Debug utilities
export const debug = {
  /**
   * Log debug message with extension prefix
   * @param {string} message - Debug message
   * @param {...any} args - Additional arguments
   */
  log(message, ...args) {
    console.log(`[{{PROJECT_NAME}}]`, message, ...args);
  },

  /**
   * Log error message with extension prefix
   * @param {string} message - Error message
   * @param {Error} error - Error object
   */
  error(message, error) {
    console.error(`[{{PROJECT_NAME}}]`, message, error);
  },
};

// Essential utility functions
export const utils = {
  /**
   * Sleep for specified milliseconds
   * @param {number} ms - Milliseconds to sleep
   * @returns {Promise<void>} Promise that resolves after delay
   */
  sleep(ms) {
    return new Promise(resolve => setTimeout(resolve, ms));
  },
};